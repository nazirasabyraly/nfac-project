// src/pages/Callback.tsx

import React, { useEffect } from 'react'
import { useNavigate } from 'react-router-dom'
import { API_BASE_URL } from '../config'

const Callback = () => {
  const navigate = useNavigate()

  useEffect(() => {
    console.log('üîç Callback page loaded')
    console.log('üìç Current URL:', window.location.href)
    
    const params = new URLSearchParams(window.location.search)
    const code = params.get('code')
    const error = params.get('error')
    const state = params.get('state')

    console.log('üìã URL Parameters:')
    console.log('- code:', code ? 'present' : 'missing')
    console.log('- error:', error)
    console.log('- state:', state)
    console.log('- all params:', Object.fromEntries(params.entries()))

    if (error) {
      console.error('‚ùå Spotify error:', error)
      alert(`–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: ${error}`)
      navigate('/')
      return
    }

    if (code) {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –±—ã–ª –ª–∏ —ç—Ç–æ—Ç –∫–æ–¥ —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω
      const processedCodes = JSON.parse(sessionStorage.getItem('processed_codes') || '[]')
      if (processedCodes.includes(code)) {
        console.log('‚ö†Ô∏è Code already processed, skipping...')
        return
      }

      console.log('üîÑ Exchanging code for token...')
      console.log('üåê API URL:', `${API_BASE_URL}/auth/spotify/callback?code=${code}`)
      
      // –û—Ç–º–µ—á–∞–µ–º –∫–æ–¥ –∫–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π
      processedCodes.push(code)
      sessionStorage.setItem('processed_codes', JSON.stringify(processedCodes))
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–¥ –Ω–∞ backend –¥–ª—è –æ–±–º–µ–Ω–∞ –Ω–∞ —Ç–æ–∫–µ–Ω
      fetch(`${API_BASE_URL}/auth/spotify/callback?code=${code}`)
        .then(response => {
          console.log('üì° Response status:', response.status)
          console.log('üì° Response headers:', response.headers)
          
          if (response.ok) {
            return response.json()
          }
          return response.text().then(text => {
            console.error('‚ùå Response text:', text)
            throw new Error(`HTTP ${response.status}: ${text}`)
          })
        })
        .then(data => {
          console.log('‚úÖ Token data received:', data)
          
          if (data.access_token) {
            localStorage.setItem('spotify_token', data.access_token)
            console.log('üíæ Token saved to localStorage')
            navigate('/dashboard')
          } else {
            console.error('‚ùå No access_token in response:', data)
            throw new Error('–¢–æ–∫–µ–Ω –Ω–µ –ø–æ–ª—É—á–µ–Ω')
          }
        })
        .catch(error => {
          console.error('‚ùå Fetch error:', error)
          alert(`–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω: ${error.message}`)
          navigate('/')
        })
    } else {
      console.error('‚ùå No code parameter found')
      alert('–ö–æ–¥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–µ –ø–æ–ª—É—á–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Spotify App.')
      navigate('/')
    }
  }, [navigate])

  return (
    <div style={{ textAlign: 'center', marginTop: '20%' }}>
      <h2>–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è...</h2>
      <p>–ü–æ–¥–∫–ª—é—á–∞–µ–º Spotify. –ü–æ–¥–æ–∂–¥–∏—Ç–µ ‚è≥</p>
      <p style={{ fontSize: '12px', color: '#666' }}>
        –û—Ç–∫—Ä–æ–π—Ç–µ –∫–æ–Ω—Å–æ–ª—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ (F12) –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
      </p>
    </div>
  )
}

export default Callback
