import React, { useEffect, useState } from 'react'
import { useNavigate } from 'react-router-dom'
import { API_BASE_URL } from '../config'

interface MusicAnalysis {
  mood: {
    valence: number;
    energy: number;
    danceability: number;
    tempo: number;
  };
  preferences: {
    favorite_artists: string[];
    total_tracks_analyzed: number;
  };
  overall_mood: string;
}

interface Track {
  name: string;
  artist: string;
  image: string;
  valence: number;
  energy: number;
  danceability: number;
}

const Dashboard = () => {
  const navigate = useNavigate()
  const [userProfile, setUserProfile] = useState<any>(null)
  const [musicAnalysis, setMusicAnalysis] = useState<MusicAnalysis | null>(null)
  const [topTracks, setTopTracks] = useState<Track[]>([])
  const [loading, setLoading] = useState(true)
  const [hasData, setHasData] = useState(false)
  const [error, setError] = useState<string | null>(null)

  useEffect(() => {
    const token = localStorage.getItem('spotify_token')
    if (!token) {
      navigate('/')
      return
    }

    const fetchData = async () => {
      try {
        const headers = {
          'Authorization': `Bearer ${token}`,
          'Content-Type': 'application/json'
        }

        // –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const profileResponse = await fetch(`${API_BASE_URL}/media/profile`, { headers })
        if (profileResponse.ok) {
          const profile = await profileResponse.json()
          setUserProfile(profile)
        }

        // –ü–æ–ª—É—á–∞–µ–º –∞–Ω–∞–ª–∏–∑ –º—É–∑—ã–∫–∞–ª—å–Ω—ã—Ö –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π
        const analysisResponse = await fetch(`${API_BASE_URL}/media/analysis`, { headers })
        if (analysisResponse.ok) {
          const analysis = await analysisResponse.json()
          if (analysis.error) {
            setError(analysis.error)
          } else {
            setMusicAnalysis(analysis)
            setHasData(true)
          }
        }

        // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–ø —Ç—Ä–µ–∫–∏
        const tracksResponse = await fetch(`${API_BASE_URL}/media/top-tracks?limit=5`, { headers })
        if (tracksResponse.ok) {
          const tracksData = await tracksResponse.json()
          if (tracksData.tracks && tracksData.tracks.length > 0) {
            setTopTracks(tracksData.tracks)
            setHasData(true)
          }
        }

      } catch (error) {
        console.error('Error fetching data:', error)
        setError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö')
      } finally {
        setLoading(false)
      }
    }

    fetchData()
  }, [navigate])

  const handleLogout = () => {
    localStorage.removeItem('spotify_token')
    navigate('/')
  }

  const getMoodEmoji = (mood: string) => {
    switch (mood) {
      case '–ü–æ–∑–∏—Ç–∏–≤–Ω–æ–µ': return 'üòä'
      case '–ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ–µ': return 'üòê'
      case '–ú–µ–ª–∞–Ω—Ö–æ–ª–∏—á–Ω–æ–µ': return 'üòî'
      default: return 'üéµ'
    }
  }

  const formatPercentage = (value: number) => {
    return Math.round(value * 100)
  }

  if (loading) {
    return (
      <div style={{ textAlign: 'center', marginTop: '20%' }}>
        <h2>–ó–∞–≥—Ä—É–∑–∫–∞...</h2>
        <p>–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –≤–∞—à –º—É–∑—ã–∫–∞–ª—å–Ω—ã–π –≤–∫—É—Å ‚è≥</p>
      </div>
    )
  }

  return (
    <div style={{ padding: '20px', maxWidth: '1200px', margin: '0 auto' }}>
      <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '30px' }}>
        <h1>üéµ VibeMatch Dashboard</h1>
        <button 
          onClick={handleLogout}
          style={{
            padding: '10px 20px',
            background: '#1DB954',
            color: 'white',
            border: 'none',
            borderRadius: '5px',
            cursor: 'pointer'
          }}
        >
          –í—ã–π—Ç–∏
        </button>
      </div>

      {/* –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
      {userProfile && (
        <div style={{ background: '#f5f5f5', padding: '20px', borderRadius: '10px', marginBottom: '20px' }}>
          <h2>üë§ –ü—Ä–æ—Ñ–∏–ª—å</h2>
          <p><strong>–ò–º—è:</strong> {userProfile.display_name}</p>
          <p><strong>Email:</strong> {userProfile.email}</p>
          <p><strong>–°—Ç—Ä–∞–Ω–∞:</strong> {userProfile.country}</p>
        </div>
      )}

      {/* –°–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö */}
      {!hasData && !loading && (
        <div style={{ background: '#fff3cd', border: '1px solid #ffeaa7', padding: '20px', borderRadius: '10px', marginBottom: '20px' }}>
          <h2>üéµ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ VibeMatch!</h2>
          <p>–ü–æ—Ö–æ–∂–µ, —á—Ç–æ –≤ –≤–∞—à–µ–º Spotify –∞–∫–∫–∞—É–Ω—Ç–µ –ø–æ–∫–∞ –º–∞–ª–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞. –í–æ—Ç —á—Ç–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å:</p>
          
          <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))', gap: '15px', marginTop: '20px' }}>
            <div style={{ background: 'white', padding: '15px', borderRadius: '8px', border: '1px solid #e9ecef' }}>
              <h4>üéº –°–ª—É—à–∞–π—Ç–µ –±–æ–ª—å—à–µ –º—É–∑—ã–∫–∏</h4>
              <p>–ß–µ–º –±–æ–ª—å—à–µ —Ç—Ä–µ–∫–æ–≤ –≤—ã —Å–ª—É—à–∞–µ—Ç–µ –≤ Spotify, —Ç–µ–º —Ç–æ—á–Ω–µ–µ –±—É–¥–µ—Ç –∞–Ω–∞–ª–∏–∑ –≤–∞—à–µ–≥–æ –≤–∫—É—Å–∞.</p>
            </div>
            
            <div style={{ background: 'white', padding: '15px', borderRadius: '8px', border: '1px solid #e9ecef' }}>
              <h4>‚ù§Ô∏è –õ–∞–π–∫–∞–π—Ç–µ —Ç—Ä–µ–∫–∏</h4>
              <p>–°—Ç–∞–≤—å—Ç–µ –ª–∞–π–∫–∏ –ª—é–±–∏–º—ã–º –ø–µ—Å–Ω—è–º, —á—Ç–æ–±—ã –º—ã –ª—É—á—à–µ –ø–æ–Ω–∏–º–∞–ª–∏ –≤–∞—à–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è.</p>
            </div>
            
            <div style={{ background: 'white', padding: '15px', borderRadius: '8px', border: '1px solid #e9ecef' }}>
              <h4>üì± –°–æ–∑–¥–∞–≤–∞–π—Ç–µ –ø–ª–µ–π–ª–∏—Å—Ç—ã</h4>
              <p>–°–æ–∑–¥–∞–≤–∞–π—Ç–µ –ø–ª–µ–π–ª–∏—Å—Ç—ã –ø–æ–¥ —Ä–∞–∑–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏.</p>
            </div>
          </div>

          <div style={{ marginTop: '20px', padding: '15px', background: '#f8f9fa', borderRadius: '8px' }}>
            <h4>üöÄ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥–µ–º–æ-—Ä–µ–∂–∏–º</h4>
            <p>–•–æ—Ç–∏—Ç–µ —É–≤–∏–¥–µ—Ç—å, –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç VibeMatch? –ú—ã –º–æ–∂–µ–º –ø–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∏–º–µ—Ä –∞–Ω–∞–ª–∏–∑–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Ç—Ä–µ–∫–æ–≤.</p>
            <button 
              style={{
                padding: '10px 20px',
                background: '#1DB954',
                color: 'white',
                border: 'none',
                borderRadius: '5px',
                cursor: 'pointer',
                marginTop: '10px'
              }}
              onClick={() => {
                // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ
                setMusicAnalysis({
                  mood: {
                    valence: 0.7,
                    energy: 0.8,
                    danceability: 0.6,
                    tempo: 120
                  },
                  preferences: {
                    favorite_artists: ['The Weeknd', 'Dua Lipa', 'Post Malone', 'Ariana Grande', 'Drake'],
                    total_tracks_analyzed: 50
                  },
                  overall_mood: '–ü–æ–∑–∏—Ç–∏–≤–Ω–æ–µ'
                })
                setTopTracks([
                  {
                    name: 'Blinding Lights',
                    artist: 'The Weeknd',
                    image: 'https://i.scdn.co/image/ab67616d0000b2738863bc11d2aa12b54f5aeb36',
                    valence: 0.7,
                    energy: 0.8,
                    danceability: 0.6
                  },
                  {
                    name: 'Levitating',
                    artist: 'Dua Lipa',
                    image: 'https://i.scdn.co/image/ab67616d0000b2738863bc11d2aa12b54f5aeb36',
                    valence: 0.8,
                    energy: 0.7,
                    danceability: 0.8
                  }
                ])
                setHasData(true)
              }}
            >
              –ó–∞–ø—É—Å—Ç–∏—Ç—å –¥–µ–º–æ
            </button>
          </div>
        </div>
      )}

      {/* –ê–Ω–∞–ª–∏–∑ –º—É–∑—ã–∫–∞–ª—å–Ω—ã—Ö –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π */}
      {musicAnalysis && hasData && (
        <div style={{ background: '#f5f5f5', padding: '20px', borderRadius: '10px', marginBottom: '20px' }}>
          <h2>üéº –ê–Ω–∞–ª–∏–∑ –º—É–∑—ã–∫–∞–ª—å–Ω–æ–≥–æ –≤–∫—É—Å–∞</h2>
          
          <div style={{ display: 'flex', alignItems: 'center', marginBottom: '15px' }}>
            <span style={{ fontSize: '24px', marginRight: '10px' }}>
              {getMoodEmoji(musicAnalysis.overall_mood)}
            </span>
            <h3>–û–±—â–µ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ: {musicAnalysis.overall_mood}</h3>
          </div>

          <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))', gap: '15px', marginBottom: '20px' }}>
            <div style={{ background: 'white', padding: '15px', borderRadius: '8px' }}>
              <h4>üòä –ü–æ–∑–∏—Ç–∏–≤–Ω–æ—Å—Ç—å</h4>
              <p style={{ fontSize: '24px', fontWeight: 'bold', color: '#1DB954' }}>
                {formatPercentage(musicAnalysis.mood.valence)}%
              </p>
            </div>
            <div style={{ background: 'white', padding: '15px', borderRadius: '8px' }}>
              <h4>‚ö° –≠–Ω–µ—Ä–≥–∏—á–Ω–æ—Å—Ç—å</h4>
              <p style={{ fontSize: '24px', fontWeight: 'bold', color: '#1DB954' }}>
                {formatPercentage(musicAnalysis.mood.energy)}%
              </p>
            </div>
            <div style={{ background: 'white', padding: '15px', borderRadius: '8px' }}>
              <h4>üíÉ –¢–∞–Ω—Ü–µ–≤–∞–ª—å–Ω–æ—Å—Ç—å</h4>
              <p style={{ fontSize: '24px', fontWeight: 'bold', color: '#1DB954' }}>
                {formatPercentage(musicAnalysis.mood.danceability)}%
              </p>
            </div>
            <div style={{ background: 'white', padding: '15px', borderRadius: '8px' }}>
              <h4>üéµ –¢–µ–º–ø</h4>
              <p style={{ fontSize: '24px', fontWeight: 'bold', color: '#1DB954' }}>
                {Math.round(musicAnalysis.mood.tempo)} BPM
              </p>
            </div>
          </div>

          <div style={{ background: 'white', padding: '15px', borderRadius: '8px' }}>
            <h4>üé§ –õ—é–±–∏–º—ã–µ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–∏</h4>
            <p>{musicAnalysis.preferences.favorite_artists.slice(0, 5).join(', ')}</p>
            <p style={{ fontSize: '12px', color: '#666' }}>
              –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ —Ç—Ä–µ–∫–æ–≤: {musicAnalysis.preferences.total_tracks_analyzed}
            </p>
          </div>
        </div>
      )}

      {/* –¢–æ–ø —Ç—Ä–µ–∫–∏ */}
      {topTracks.length > 0 && hasData && (
        <div style={{ background: '#f5f5f5', padding: '20px', borderRadius: '10px', marginBottom: '20px' }}>
          <h2>üî• –í–∞—à–∏ —Ç–æ–ø —Ç—Ä–µ–∫–∏</h2>
          <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))', gap: '15px' }}>
            {topTracks.map((track, index) => (
              <div key={index} style={{ background: 'white', padding: '15px', borderRadius: '8px', display: 'flex', alignItems: 'center' }}>
                {track.image && (
                  <img 
                    src={track.image} 
                    alt={track.name}
                    style={{ width: '60px', height: '60px', borderRadius: '5px', marginRight: '15px' }}
                  />
                )}
                <div>
                  <h4 style={{ margin: '0 0 5px 0' }}>{track.name}</h4>
                  <p style={{ margin: '0', color: '#666' }}>{track.artist}</p>
                  <div style={{ fontSize: '12px', color: '#999', marginTop: '5px' }}>
                    <span>üòä {formatPercentage(track.valence)}%</span> ‚Ä¢ 
                    <span>‚ö° {formatPercentage(track.energy)}%</span> ‚Ä¢ 
                    <span>üíÉ {formatPercentage(track.danceability)}%</span>
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>
      )}

      {/* –û—à–∏–±–∫–∞ */}
      {error && (
        <div style={{ background: '#f8d7da', border: '1px solid #f5c6cb', padding: '20px', borderRadius: '10px', marginBottom: '20px' }}>
          <h3>‚ùå –û—à–∏–±–∫–∞</h3>
          <p>{error}</p>
        </div>
      )}

      {/* –§—É–Ω–∫—Ü–∏–∏ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ */}
      <div style={{ background: '#f5f5f5', padding: '20px', borderRadius: '10px' }}>
        <h3>üîß –§—É–Ω–∫—Ü–∏–∏ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ:</h3>
        <ul>
          <li>üì∏ –ê–Ω–∞–ª–∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è —Ñ–æ—Ç–æ/–≤–∏–¥–µ–æ</li>
          <li>üéµ –ü–æ–¥–±–æ—Ä –º—É–∑—ã–∫–∏ –ø–æ–¥ –∫–æ–Ω—Ç–µ–Ω—Ç</li>
          <li>üì± –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Instagram Stories</li>
          <li>üéº –°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–µ–π–ª–∏—Å—Ç–æ–≤ –ø–æ–¥ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ</li>
          <li>ü§ù –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –≤–∫—É—Å–æ–≤ —Å –¥—Ä—É–∑—å—è–º–∏</li>
        </ul>
      </div>
    </div>
  )
}

export default Dashboard 